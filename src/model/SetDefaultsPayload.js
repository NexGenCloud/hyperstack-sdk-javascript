/**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SetDefaultsPayload model module.
 * @module model/SetDefaultsPayload
 * @version v1.25.0-alpha
 */
class SetDefaultsPayload {
    /**
     * Constructs a new <code>SetDefaultsPayload</code>.
     * @alias module:model/SetDefaultsPayload
     * @param flavors {Array.<Number>} 
     * @param images {Array.<Number>} 
     */
    constructor(flavors, images) { 
        
        SetDefaultsPayload.initialize(this, flavors, images);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, flavors, images) { 
        obj['flavors'] = flavors;
        obj['images'] = images;
    }

    /**
     * Constructs a <code>SetDefaultsPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SetDefaultsPayload} obj Optional instance to populate.
     * @return {module:model/SetDefaultsPayload} The populated <code>SetDefaultsPayload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SetDefaultsPayload();

            if (data.hasOwnProperty('flavors')) {
                obj['flavors'] = ApiClient.convertToType(data['flavors'], ['Number']);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SetDefaultsPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SetDefaultsPayload</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SetDefaultsPayload.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['flavors'])) {
            throw new Error("Expected the field `flavors` to be an array in the JSON data but got " + data['flavors']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['images'])) {
            throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
        }

        return true;
    }


}

SetDefaultsPayload.RequiredProperties = ["flavors", "images"];

/**
 * @member {Array.<Number>} flavors
 */
SetDefaultsPayload.prototype['flavors'] = undefined;

/**
 * @member {Array.<Number>} images
 */
SetDefaultsPayload.prototype['images'] = undefined;






export default SetDefaultsPayload;

