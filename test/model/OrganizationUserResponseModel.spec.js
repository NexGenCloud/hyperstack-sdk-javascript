/**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperstackApi);
  }
}(this, function(expect, HyperstackApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperstackApi.OrganizationUserResponseModel();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationUserResponseModel', function() {
    it('should create an instance of OrganizationUserResponseModel', function() {
      // uncomment below and update the code to test OrganizationUserResponseModel
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be.a(HyperstackApi.OrganizationUserResponseModel);
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property joinedAt (base name: "joined_at")', function() {
      // uncomment below and update the code to test the property joinedAt
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property lastLogin (base name: "last_login")', function() {
      // uncomment below and update the code to test the property lastLogin
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property rbacRoles (base name: "rbac_roles")', function() {
      // uncomment below and update the code to test the property rbacRoles
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property role (base name: "role")', function() {
      // uncomment below and update the code to test the property role
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property sub (base name: "sub")', function() {
      // uncomment below and update the code to test the property sub
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new HyperstackApi.OrganizationUserResponseModel();
      //expect(instance).to.be();
    });

  });

}));
