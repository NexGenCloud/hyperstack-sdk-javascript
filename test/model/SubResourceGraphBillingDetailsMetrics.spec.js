/**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperstackApi);
  }
}(this, function(expect, HyperstackApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SubResourceGraphBillingDetailsMetrics', function() {
    it('should create an instance of SubResourceGraphBillingDetailsMetrics', function() {
      // uncomment below and update the code to test SubResourceGraphBillingDetailsMetrics
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be.a(HyperstackApi.SubResourceGraphBillingDetailsMetrics);
    });

    it('should have the property cpuIncurredBill (base name: "cpu_incurred_bill")', function() {
      // uncomment below and update the code to test the property cpuIncurredBill
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property cpuIncurredBillGraph (base name: "cpu_incurred_bill_graph")', function() {
      // uncomment below and update the code to test the property cpuIncurredBillGraph
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property diskIncurredBill (base name: "disk_incurred_bill")', function() {
      // uncomment below and update the code to test the property diskIncurredBill
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property diskIncurredBillGraph (base name: "disk_incurred_bill_graph")', function() {
      // uncomment below and update the code to test the property diskIncurredBillGraph
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property ephemeralIncurredBill (base name: "ephemeral_incurred_bill")', function() {
      // uncomment below and update the code to test the property ephemeralIncurredBill
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property ephemeralIncurredBillGraph (base name: "ephemeral_incurred_bill_graph")', function() {
      // uncomment below and update the code to test the property ephemeralIncurredBillGraph
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property gpuIncurredBill (base name: "gpu_incurred_bill")', function() {
      // uncomment below and update the code to test the property gpuIncurredBill
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property gpuIncurredBillGraph (base name: "gpu_incurred_bill_graph")', function() {
      // uncomment below and update the code to test the property gpuIncurredBillGraph
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property publicipIncurredBill (base name: "publicip_incurred_bill")', function() {
      // uncomment below and update the code to test the property publicipIncurredBill
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property publicipIncurredBillGraph (base name: "publicip_incurred_bill_graph")', function() {
      // uncomment below and update the code to test the property publicipIncurredBillGraph
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property ramIncurredBill (base name: "ram_incurred_bill")', function() {
      // uncomment below and update the code to test the property ramIncurredBill
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

    it('should have the property ramIncurredBillGraph (base name: "ram_incurred_bill_graph")', function() {
      // uncomment below and update the code to test the property ramIncurredBillGraph
      //var instance = new HyperstackApi.SubResourceGraphBillingDetailsMetrics();
      //expect(instance).to.be();
    });

  });

}));
