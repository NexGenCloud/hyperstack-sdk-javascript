/**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperstackApi);
  }
}(this, function(expect, HyperstackApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperstackApi.URIs();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('URIs', function() {
    it('should create an instance of URIs', function() {
      // uncomment below and update the code to test URIs
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be.a(HyperstackApi.URIs);
    });

    it('should have the property apiDoc (base name: "api_doc")', function() {
      // uncomment below and update the code to test the property apiDoc
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

    it('should have the property apiUri (base name: "api_uri")', function() {
      // uncomment below and update the code to test the property apiUri
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

    it('should have the property auth (base name: "auth")', function() {
      // uncomment below and update the code to test the property auth
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

    it('should have the property console (base name: "console")', function() {
      // uncomment below and update the code to test the property console
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

    it('should have the property contactUs (base name: "contact_us")', function() {
      // uncomment below and update the code to test the property contactUs
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

    it('should have the property doc (base name: "doc")', function() {
      // uncomment below and update the code to test the property doc
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

    it('should have the property landingPage (base name: "landing_page")', function() {
      // uncomment below and update the code to test the property landingPage
      //var instance = new HyperstackApi.URIs();
      //expect(instance).to.be();
    });

  });

}));
