/**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HyperstackApi);
  }
}(this, function(expect, HyperstackApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HyperstackApi.OrganizationFields();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrganizationFields', function() {
    it('should create an instance of OrganizationFields', function() {
      // uncomment below and update the code to test OrganizationFields
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be.a(HyperstackApi.OrganizationFields);
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property credit (base name: "credit")', function() {
      // uncomment below and update the code to test the property credit
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property threshold (base name: "threshold")', function() {
      // uncomment below and update the code to test the property threshold
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property totalClusters (base name: "total_clusters")', function() {
      // uncomment below and update the code to test the property totalClusters
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property totalContainers (base name: "total_containers")', function() {
      // uncomment below and update the code to test the property totalContainers
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property totalInstances (base name: "total_instances")', function() {
      // uncomment below and update the code to test the property totalInstances
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property totalVolumes (base name: "total_volumes")', function() {
      // uncomment below and update the code to test the property totalVolumes
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

    it('should have the property users (base name: "users")', function() {
      // uncomment below and update the code to test the property users
      //var instance = new HyperstackApi.OrganizationFields();
      //expect(instance).to.be();
    });

  });

}));
