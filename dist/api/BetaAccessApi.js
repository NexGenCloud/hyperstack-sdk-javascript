"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _BetaAccessRequestPayload = _interopRequireDefault(require("../model/BetaAccessRequestPayload"));
var _BetaAccessRequestResponseModel = _interopRequireDefault(require("../model/BetaAccessRequestResponseModel"));
var _BetaAccessStatusResponseModel = _interopRequireDefault(require("../model/BetaAccessStatusResponseModel"));
var _ErrorResponseModel = _interopRequireDefault(require("../model/ErrorResponseModel"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* BetaAccess service.
* @module api/BetaAccessApi
* @version v1.41.2-alpha
*/
var BetaAccessApi = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new BetaAccessApi. 
  * @alias module:api/BetaAccessApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function BetaAccessApi(apiClient) {
    _classCallCheck(this, BetaAccessApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Create a new beta access request
   * Creates a new beta access request for the current user
   * @param {module:model/BetaAccessRequestPayload} payload 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BetaAccessRequestResponseModel} and HTTP response
   */
  return _createClass(BetaAccessApi, [{
    key: "createABetaAccessRequestWithHttpInfo",
    value: function createABetaAccessRequestWithHttpInfo(payload) {
      var postBody = payload;
      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling createABetaAccessRequest");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _BetaAccessRequestResponseModel["default"];
      return this.apiClient.callApi('/auth/beta-access/requests', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Create a new beta access request
     * Creates a new beta access request for the current user
     * @param {module:model/BetaAccessRequestPayload} payload 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BetaAccessRequestResponseModel}
     */
  }, {
    key: "createABetaAccessRequest",
    value: function createABetaAccessRequest(payload) {
      return this.createABetaAccessRequestWithHttpInfo(payload).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Check the status of all beta access requests
     * Check the status of all beta access requests.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BetaAccessStatusResponseModel} and HTTP response
     */
  }, {
    key: "getBetaAccessStatusWithHttpInfo",
    value: function getBetaAccessStatusWithHttpInfo() {
      var postBody = null;
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _BetaAccessStatusResponseModel["default"];
      return this.apiClient.callApi('/auth/beta-access/requests', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Check the status of all beta access requests
     * Check the status of all beta access requests.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BetaAccessStatusResponseModel}
     */
  }, {
    key: "getBetaAccessStatus",
    value: function getBetaAccessStatus() {
      return this.getBetaAccessStatusWithHttpInfo().then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Check the status of beta access requests
     * Check the status of a particular beta access requests.
     * @param {String} program 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/BetaAccessStatusResponseModel} and HTTP response
     */
  }, {
    key: "getBetaAccessStatus2WithHttpInfo",
    value: function getBetaAccessStatus2WithHttpInfo(program) {
      var postBody = null;
      // verify the required parameter 'program' is set
      if (program === undefined || program === null) {
        throw new Error("Missing the required parameter 'program' when calling getBetaAccessStatus2");
      }
      var pathParams = {
        'program': program
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _BetaAccessStatusResponseModel["default"];
      return this.apiClient.callApi('/auth/beta-access/requests/{program}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Check the status of beta access requests
     * Check the status of a particular beta access requests.
     * @param {String} program 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/BetaAccessStatusResponseModel}
     */
  }, {
    key: "getBetaAccessStatus2",
    value: function getBetaAccessStatus2(program) {
      return this.getBetaAccessStatus2WithHttpInfo(program).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
}();