"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _ErrorResponseModel = _interopRequireDefault(require("../model/ErrorResponseModel"));
var _ResponseModel = _interopRequireDefault(require("../model/ResponseModel"));
var _Template = _interopRequireDefault(require("../model/Template"));
var _Templates = _interopRequireDefault(require("../model/Templates"));
var _UpdateTemplate = _interopRequireDefault(require("../model/UpdateTemplate"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* Template service.
* @module api/TemplateApi
* @version v1.41.0-alpha
*/
var TemplateApi = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new TemplateApi. 
  * @alias module:api/TemplateApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function TemplateApi(apiClient) {
    _classCallCheck(this, TemplateApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Create template
   * Creates a resource template for deployment.
   * @param {File} content YAML file is required
   * @param {String} description description is required
   * @param {String} isPublic is_public is required
   * @param {String} name name is required
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Template} and HTTP response
   */
  return _createClass(TemplateApi, [{
    key: "createTemplateWithHttpInfo",
    value: function createTemplateWithHttpInfo(content, description, isPublic, name) {
      var postBody = null;
      // verify the required parameter 'content' is set
      if (content === undefined || content === null) {
        throw new Error("Missing the required parameter 'content' when calling createTemplate");
      }
      // verify the required parameter 'description' is set
      if (description === undefined || description === null) {
        throw new Error("Missing the required parameter 'description' when calling createTemplate");
      }
      // verify the required parameter 'isPublic' is set
      if (isPublic === undefined || isPublic === null) {
        throw new Error("Missing the required parameter 'isPublic' when calling createTemplate");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling createTemplate");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {
        'content': content,
        'description': description,
        'is_public': isPublic,
        'name': name
      };
      var authNames = ['apiKey'];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json'];
      var returnType = _Template["default"];
      return this.apiClient.callApi('/core/marketplace/templates', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Create template
     * Creates a resource template for deployment.
     * @param {File} content YAML file is required
     * @param {String} description description is required
     * @param {String} isPublic is_public is required
     * @param {String} name name is required
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Template}
     */
  }, {
    key: "createTemplate",
    value: function createTemplate(content, description, isPublic, name) {
      return this.createTemplateWithHttpInfo(content, description, isPublic, name).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Delete template
     * Permanently deletes a template. Supply the template ID in the path to delete the specified template.
     * @param {Number} id 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ResponseModel} and HTTP response
     */
  }, {
    key: "deleteTemplateWithHttpInfo",
    value: function deleteTemplateWithHttpInfo(id) {
      var postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteTemplate");
      }
      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _ResponseModel["default"];
      return this.apiClient.callApi('/core/marketplace/templates/{id}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Delete template
     * Permanently deletes a template. Supply the template ID in the path to delete the specified template.
     * @param {Number} id 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ResponseModel}
     */
  }, {
    key: "deleteTemplate",
    value: function deleteTemplate(id) {
      return this.deleteTemplateWithHttpInfo(id).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * List templates
     * Returns a comprehensive list of templates, providing resource configuration details for each. Optionally, specify the `visibility` as `public` or `private` to retrieve templates with the desired visibility status. To learn more about the templates feature, [**click here**](https://docs.hyperstack.cloud/docs/features/templates#view-a-list-of-templates).
     * @param {Object} opts Optional parameters
     * @param {String} [visibility] Specify the `visibility` status as either `public` or `private` to filter and retrieve templates with the desired visibility.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Templates} and HTTP response
     */
  }, {
    key: "listTemplatesWithHttpInfo",
    value: function listTemplatesWithHttpInfo(opts) {
      opts = opts || {};
      var postBody = null;
      var pathParams = {};
      var queryParams = {
        'visibility': opts['visibility']
      };
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _Templates["default"];
      return this.apiClient.callApi('/core/marketplace/templates', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * List templates
     * Returns a comprehensive list of templates, providing resource configuration details for each. Optionally, specify the `visibility` as `public` or `private` to retrieve templates with the desired visibility status. To learn more about the templates feature, [**click here**](https://docs.hyperstack.cloud/docs/features/templates#view-a-list-of-templates).
     * @param {Object} opts Optional parameters
     * @param {String} opts.visibility Specify the `visibility` status as either `public` or `private` to filter and retrieve templates with the desired visibility.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Templates}
     */
  }, {
    key: "listTemplates",
    value: function listTemplates(opts) {
      return this.listTemplatesWithHttpInfo(opts).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Retrieve template details
     * Retrieves the resource configuration details for a specified template.Provide the template ID in the path to retrieve details for the specified template.For additional information on template configuration details,[**click here**](https://docs.hyperstack.cloud/docs/api-references/).
     * @param {Number} id 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Template} and HTTP response
     */
  }, {
    key: "retrieveTemplateDetailsWithHttpInfo",
    value: function retrieveTemplateDetailsWithHttpInfo(id) {
      var postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling retrieveTemplateDetails");
      }
      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _Template["default"];
      return this.apiClient.callApi('/core/marketplace/templates/{id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Retrieve template details
     * Retrieves the resource configuration details for a specified template.Provide the template ID in the path to retrieve details for the specified template.For additional information on template configuration details,[**click here**](https://docs.hyperstack.cloud/docs/api-references/).
     * @param {Number} id 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Template}
     */
  }, {
    key: "retrieveTemplateDetails",
    value: function retrieveTemplateDetails(id) {
      return this.retrieveTemplateDetailsWithHttpInfo(id).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Update template
     * Updates the details of a template. Modify the template name, description and/or`is_public` status to change the public/private visibility of the template.
     * @param {Number} id 
     * @param {module:model/UpdateTemplate} payload 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Template} and HTTP response
     */
  }, {
    key: "updateTemplateWithHttpInfo",
    value: function updateTemplateWithHttpInfo(id, payload) {
      var postBody = payload;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateTemplate");
      }
      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling updateTemplate");
      }
      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['apiKey'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _Template["default"];
      return this.apiClient.callApi('/core/marketplace/templates/{id}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Update template
     * Updates the details of a template. Modify the template name, description and/or`is_public` status to change the public/private visibility of the template.
     * @param {Number} id 
     * @param {module:model/UpdateTemplate} payload 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Template}
     */
  }, {
    key: "updateTemplate",
    value: function updateTemplate(id, payload) {
      return this.updateTemplateWithHttpInfo(id, payload).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
}();