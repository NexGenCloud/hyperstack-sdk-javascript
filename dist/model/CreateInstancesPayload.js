"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _CreateSecurityRulePayload = _interopRequireDefault(require("./CreateSecurityRulePayload"));
var _FlavorObjectFields = _interopRequireDefault(require("./FlavorObjectFields"));
var _ProfileObjectFields = _interopRequireDefault(require("./ProfileObjectFields"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The CreateInstancesPayload model module.
 * @module model/CreateInstancesPayload
 * @version v1.25.0-alpha
 */
var CreateInstancesPayload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateInstancesPayload</code>.
   * @alias module:model/CreateInstancesPayload
   * @param count {Number} The number of virtual machines to be created.
   * @param environmentName {String} The name of the [environment](https://infrahub-doc.nexgencloud.com/docs/features/environments-available-features) in which the virtual machine is to be created.
   * @param flavorName {String} The name of the GPU hardware configuration ([flavor](https://infrahub-doc.nexgencloud.com/docs/hardware/flavors)) for the virtual machines being created.
   * @param keyName {String} The name of the existing SSH key pair to be used for secure access to the virtual machine. For additional information on SSH key pairs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/getting-started/create-keypair).
   * @param name {String} The name of the virtual machine being created.
   */
  function CreateInstancesPayload(count, environmentName, flavorName, keyName, name) {
    _classCallCheck(this, CreateInstancesPayload);
    CreateInstancesPayload.initialize(this, count, environmentName, flavorName, keyName, name);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(CreateInstancesPayload, null, [{
    key: "initialize",
    value: function initialize(obj, count, environmentName, flavorName, keyName, name) {
      obj['count'] = count;
      obj['enable_port_randomization'] = true;
      obj['environment_name'] = environmentName;
      obj['flavor_name'] = flavorName;
      obj['key_name'] = keyName;
      obj['name'] = name;
    }

    /**
     * Constructs a <code>CreateInstancesPayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateInstancesPayload} obj Optional instance to populate.
     * @return {module:model/CreateInstancesPayload} The populated <code>CreateInstancesPayload</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateInstancesPayload();
        if (data.hasOwnProperty('assign_floating_ip')) {
          obj['assign_floating_ip'] = _ApiClient["default"].convertToType(data['assign_floating_ip'], 'Boolean');
        }
        if (data.hasOwnProperty('callback_url')) {
          obj['callback_url'] = _ApiClient["default"].convertToType(data['callback_url'], 'String');
        }
        if (data.hasOwnProperty('count')) {
          obj['count'] = _ApiClient["default"].convertToType(data['count'], 'Number');
        }
        if (data.hasOwnProperty('create_bootable_volume')) {
          obj['create_bootable_volume'] = _ApiClient["default"].convertToType(data['create_bootable_volume'], 'Boolean');
        }
        if (data.hasOwnProperty('enable_port_randomization')) {
          obj['enable_port_randomization'] = _ApiClient["default"].convertToType(data['enable_port_randomization'], 'Boolean');
        }
        if (data.hasOwnProperty('environment_name')) {
          obj['environment_name'] = _ApiClient["default"].convertToType(data['environment_name'], 'String');
        }
        if (data.hasOwnProperty('flavor')) {
          obj['flavor'] = _FlavorObjectFields["default"].constructFromObject(data['flavor']);
        }
        if (data.hasOwnProperty('flavor_name')) {
          obj['flavor_name'] = _ApiClient["default"].convertToType(data['flavor_name'], 'String');
        }
        if (data.hasOwnProperty('image_name')) {
          obj['image_name'] = _ApiClient["default"].convertToType(data['image_name'], 'String');
        }
        if (data.hasOwnProperty('key_name')) {
          obj['key_name'] = _ApiClient["default"].convertToType(data['key_name'], 'String');
        }
        if (data.hasOwnProperty('labels')) {
          obj['labels'] = _ApiClient["default"].convertToType(data['labels'], ['String']);
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('profile')) {
          obj['profile'] = _ProfileObjectFields["default"].constructFromObject(data['profile']);
        }
        if (data.hasOwnProperty('security_rules')) {
          obj['security_rules'] = _ApiClient["default"].convertToType(data['security_rules'], [_CreateSecurityRulePayload["default"]]);
        }
        if (data.hasOwnProperty('user_data')) {
          obj['user_data'] = _ApiClient["default"].convertToType(data['user_data'], 'String');
        }
        if (data.hasOwnProperty('volume_name')) {
          obj['volume_name'] = _ApiClient["default"].convertToType(data['volume_name'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateInstancesPayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateInstancesPayload</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(CreateInstancesPayload.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
        throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
      }
      // ensure the json data is a string
      if (data['environment_name'] && !(typeof data['environment_name'] === 'string' || data['environment_name'] instanceof String)) {
        throw new Error("Expected the field `environment_name` to be a primitive type in the JSON string but got " + data['environment_name']);
      }
      // validate the optional field `flavor`
      if (data['flavor']) {
        // data not null
        _FlavorObjectFields["default"].validateJSON(data['flavor']);
      }
      // ensure the json data is a string
      if (data['flavor_name'] && !(typeof data['flavor_name'] === 'string' || data['flavor_name'] instanceof String)) {
        throw new Error("Expected the field `flavor_name` to be a primitive type in the JSON string but got " + data['flavor_name']);
      }
      // ensure the json data is a string
      if (data['image_name'] && !(typeof data['image_name'] === 'string' || data['image_name'] instanceof String)) {
        throw new Error("Expected the field `image_name` to be a primitive type in the JSON string but got " + data['image_name']);
      }
      // ensure the json data is a string
      if (data['key_name'] && !(typeof data['key_name'] === 'string' || data['key_name'] instanceof String)) {
        throw new Error("Expected the field `key_name` to be a primitive type in the JSON string but got " + data['key_name']);
      }
      // ensure the json data is an array
      if (!Array.isArray(data['labels'])) {
        throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
      }
      // ensure the json data is a string
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // validate the optional field `profile`
      if (data['profile']) {
        // data not null
        _ProfileObjectFields["default"].validateJSON(data['profile']);
      }
      if (data['security_rules']) {
        // data not null
        // ensure the json data is an array
        if (!Array.isArray(data['security_rules'])) {
          throw new Error("Expected the field `security_rules` to be an array in the JSON data but got " + data['security_rules']);
        }
        // validate the optional field `security_rules` (array)
        var _iterator2 = _createForOfIteratorHelper(data['security_rules']),
          _step2;
        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var item = _step2.value;
            _CreateSecurityRulePayload["default"].validateJSON(item);
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
        ;
      }
      // ensure the json data is a string
      if (data['user_data'] && !(typeof data['user_data'] === 'string' || data['user_data'] instanceof String)) {
        throw new Error("Expected the field `user_data` to be a primitive type in the JSON string but got " + data['user_data']);
      }
      // ensure the json data is a string
      if (data['volume_name'] && !(typeof data['volume_name'] === 'string' || data['volume_name'] instanceof String)) {
        throw new Error("Expected the field `volume_name` to be a primitive type in the JSON string but got " + data['volume_name']);
      }
      return true;
    }
  }]);
}();
CreateInstancesPayload.RequiredProperties = ["count", "environment_name", "flavor_name", "key_name", "name"];

/**
 * When this field is set to `true`, it attaches a [public IP address](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/public-ip)to the virtual machine, enabling internet accessibility.
 * @member {Boolean} assign_floating_ip
 */
CreateInstancesPayload.prototype['assign_floating_ip'] = undefined;

/**
 * An optional URL where actions performed on the virtual machine will be sent. For additional information on event callbacks, [**click here**](https://infrahub-doc.nexgencloud.com/docs/features/webhooks-callbacks).
 * @member {String} callback_url
 */
CreateInstancesPayload.prototype['callback_url'] = undefined;

/**
 * The number of virtual machines to be created.
 * @member {Number} count
 */
CreateInstancesPayload.prototype['count'] = undefined;

/**
 * Indicates whether to create a bootable volume for the virtual machine. When set to `true`, a bootable volume will be created; the default value is `false`.
 * @member {Boolean} create_bootable_volume
 */
CreateInstancesPayload.prototype['create_bootable_volume'] = undefined;

/**
 * Indicates whether to enable port randomization.This setting is only effective if 'assign_floating_ip' is true. Defaults to true.
 * @member {Boolean} enable_port_randomization
 * @default true
 */
CreateInstancesPayload.prototype['enable_port_randomization'] = true;

/**
 * The name of the [environment](https://infrahub-doc.nexgencloud.com/docs/features/environments-available-features) in which the virtual machine is to be created.
 * @member {String} environment_name
 */
CreateInstancesPayload.prototype['environment_name'] = undefined;

/**
 * @member {module:model/FlavorObjectFields} flavor
 */
CreateInstancesPayload.prototype['flavor'] = undefined;

/**
 * The name of the GPU hardware configuration ([flavor](https://infrahub-doc.nexgencloud.com/docs/hardware/flavors)) for the virtual machines being created.
 * @member {String} flavor_name
 */
CreateInstancesPayload.prototype['flavor_name'] = undefined;

/**
 * The [operating system (OS) image](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/images) name designated for installation on the virtual machine.It also accepts custom, private images, created from [existing snapshots](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/custom-images).
 * @member {String} image_name
 */
CreateInstancesPayload.prototype['image_name'] = undefined;

/**
 * The name of the existing SSH key pair to be used for secure access to the virtual machine. For additional information on SSH key pairs, [**click here**](https://infrahub-doc.nexgencloud.com/docs/getting-started/create-keypair).
 * @member {String} key_name
 */
CreateInstancesPayload.prototype['key_name'] = undefined;

/**
 * @member {Array.<String>} labels
 */
CreateInstancesPayload.prototype['labels'] = undefined;

/**
 * The name of the virtual machine being created.
 * @member {String} name
 */
CreateInstancesPayload.prototype['name'] = undefined;

/**
 * @member {module:model/ProfileObjectFields} profile
 */
CreateInstancesPayload.prototype['profile'] = undefined;

/**
 * @member {Array.<module:model/CreateSecurityRulePayload>} security_rules
 */
CreateInstancesPayload.prototype['security_rules'] = undefined;

/**
 * Optional initialization configuration commands to manage the configuration of a virtual machine at launch using cloud-init scripts. For more information about custom VM configuration using cloud-init, [**click here**](https://infrahub-doc.nexgencloud.com/docs/virtual-machines/initialization-configuration).
 * @member {String} user_data
 */
CreateInstancesPayload.prototype['user_data'] = undefined;

/**
 * The names of the volume(s) to be attached to the virtual machine being created.
 * @member {String} volume_name
 */
CreateInstancesPayload.prototype['volume_name'] = undefined;
var _default = exports["default"] = CreateInstancesPayload;