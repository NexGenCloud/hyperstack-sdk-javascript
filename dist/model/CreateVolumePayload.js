"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Infrahub-API
 * Leverage the Infrahub API and Hyperstack platform to easily create, manage, and scale powerful GPU virtual machines and their associated resources.   Access this SDK to automate the deployment of your workloads and streamline your infrastructure management.  To contribute, please raise an issue with a bug report, feature request, feedback, or general inquiry.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The CreateVolumePayload model module.
 * @module model/CreateVolumePayload
 * @version v1.45.2-alpha
 */
var CreateVolumePayload = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateVolumePayload</code>.
   * @alias module:model/CreateVolumePayload
   * @param environmentName {String} The name of the [environment](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/) within which the volume is being created.
   * @param name {String} The name of the volume being created.
   * @param size {Number} The size of the volume in GB. 1048576GB storage capacity per volume.
   * @param volumeType {String} Specifies the type of volume being created, which determines the storage technology it will use. Call the [List volume types](https://infrahub-api-doc.nexgencloud.com/#get-/core/volumes) endpoint to retrieve a list of available volume model types.
   */
  function CreateVolumePayload(environmentName, name, size, volumeType) {
    _classCallCheck(this, CreateVolumePayload);
    CreateVolumePayload.initialize(this, environmentName, name, size, volumeType);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(CreateVolumePayload, null, [{
    key: "initialize",
    value: function initialize(obj, environmentName, name, size, volumeType) {
      obj['environment_name'] = environmentName;
      obj['name'] = name;
      obj['size'] = size;
      obj['volume_type'] = volumeType;
    }

    /**
     * Constructs a <code>CreateVolumePayload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateVolumePayload} obj Optional instance to populate.
     * @return {module:model/CreateVolumePayload} The populated <code>CreateVolumePayload</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateVolumePayload();
        if (data.hasOwnProperty('callback_url')) {
          obj['callback_url'] = _ApiClient["default"].convertToType(data['callback_url'], 'String');
        }
        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }
        if (data.hasOwnProperty('environment_name')) {
          obj['environment_name'] = _ApiClient["default"].convertToType(data['environment_name'], 'String');
        }
        if (data.hasOwnProperty('image_id')) {
          obj['image_id'] = _ApiClient["default"].convertToType(data['image_id'], 'Number');
        }
        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }
        if (data.hasOwnProperty('size')) {
          obj['size'] = _ApiClient["default"].convertToType(data['size'], 'Number');
        }
        if (data.hasOwnProperty('volume_type')) {
          obj['volume_type'] = _ApiClient["default"].convertToType(data['volume_type'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateVolumePayload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateVolumePayload</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(CreateVolumePayload.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
        throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
      }
      // ensure the json data is a string
      if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
        throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
      }
      // ensure the json data is a string
      if (data['environment_name'] && !(typeof data['environment_name'] === 'string' || data['environment_name'] instanceof String)) {
        throw new Error("Expected the field `environment_name` to be a primitive type in the JSON string but got " + data['environment_name']);
      }
      // ensure the json data is a string
      if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
        throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
      }
      // ensure the json data is a string
      if (data['volume_type'] && !(typeof data['volume_type'] === 'string' || data['volume_type'] instanceof String)) {
        throw new Error("Expected the field `volume_type` to be a primitive type in the JSON string but got " + data['volume_type']);
      }
      return true;
    }
  }]);
}();
CreateVolumePayload.RequiredProperties = ["environment_name", "name", "size", "volume_type"];

/**
 * A URL that can be attached to the volume you are creating. This `callback_url` will post any action events that occur to your volume to the provided URL.
 * @member {String} callback_url
 */
CreateVolumePayload.prototype['callback_url'] = undefined;

/**
 * A brief description or comment about the volume.
 * @member {String} description
 */
CreateVolumePayload.prototype['description'] = undefined;

/**
 * The name of the [environment](https://docs.hyperstack.cloud/docs/api-reference/core-resources/environments/) within which the volume is being created.
 * @member {String} environment_name
 */
CreateVolumePayload.prototype['environment_name'] = undefined;

/**
 * The ID of the operating system image that will be associated with the volume. By providing an `image_id` in the create volume request, you will create a bootable volume.
 * @member {Number} image_id
 */
CreateVolumePayload.prototype['image_id'] = undefined;

/**
 * The name of the volume being created.
 * @member {String} name
 */
CreateVolumePayload.prototype['name'] = undefined;

/**
 * The size of the volume in GB. 1048576GB storage capacity per volume.
 * @member {Number} size
 */
CreateVolumePayload.prototype['size'] = undefined;

/**
 * Specifies the type of volume being created, which determines the storage technology it will use. Call the [List volume types](https://infrahub-api-doc.nexgencloud.com/#get-/core/volumes) endpoint to retrieve a list of available volume model types.
 * @member {String} volume_type
 */
CreateVolumePayload.prototype['volume_type'] = undefined;
var _default = exports["default"] = CreateVolumePayload;